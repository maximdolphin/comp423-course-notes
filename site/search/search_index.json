{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"tutorials/go-tutorial/","title":"Setting up a dev container for Go","text":"<ul> <li>Primary author: Maxim Chadaev </li> <li>Reviewer: Daniel Henderson</li> </ul>"},{"location":"tutorials/go-tutorial/#initial-setup","title":"Initial Setup","text":"<ol> <li>To create a project, run <code>mkdir &lt;name&gt;</code> and <code>cd &lt;project-name&gt;</code> for your specific project</li> <li>Then, you need to intiialize a git repo with <code>git init</code></li> <li> <p>Add a readme file to make your first commit with <code>bash echo \"# My Rust Project\" &gt; README.md git add README.md git commit -m \"Initial commit with README\"</code></p> </li> <li> <p>Then, to create a Remote Repository on Github, login to Github and go to the 'Create a New Repository Page`</p> </li> <li>Choose your settings and details, and choose the same name as your project and create the repository</li> <li>Then, add the Github repository as a remote with <code>git remote add origin https://github.com/&lt;your-username&gt;/&lt;project-name&gt;</code>. Make sure you replace <code>&lt;your-username&gt;</code> and <code>&lt;project-name&gt;</code> with your GitHub username and project name respectively.</li> <li>Check the default branch with <code>git branch</code> and if it is not main, rename it with <code>git branch -M main</code>.</li> <li>Then push it with <code>git push --set-upstream origin main</code></li> </ol>"},{"location":"tutorials/go-tutorial/#set-up-devcontainer","title":"Set up Devcontainer","text":"<ol> <li>Create a directory <code>.devcontainer</code>.</li> <li>Create a Dockerfile <code>.devcontainer/Dockerfile</code>.</li> <li>Create a dev container configuration <code>.devcontainer/devcontainer.json</code>.</li> <li>Make sure you have Docker installed. If you use Windows, make sure your project is on a partition shared with Docker.</li> </ol>"},{"location":"tutorials/go-tutorial/#dev-container-configuration","title":"Dev Container configuration","text":"<pre><code>{\n    \"name\": \"Your project Dev\",\n    \"image\": \"mcr.microsoft.com/devcontainers/go:latest\",\n    \"dockerFile\": \"Dockerfile\",\n    \"extensions\": [\n        \"golang.go\",\n    ],\n    \"settings\": {\n        \"go.useLanguageServer\": true\n    },\n    \"postCreateCommand\": \"go mod download\",\n}\n</code></pre> <p>It also runs go mod download after the container is set up to download your Go dependencies when the container is ready.</p>"},{"location":"tutorials/go-tutorial/#using-go-commands","title":"Using Go Commands","text":"<ol> <li>Verify the Go Installation <code>go version</code></li> <li>Initialize a Go module <code>go mod init example.com/myapp</code></li> <li>Run your Go code <code>go run main.go</code></li> <li>Build a binary <code>go build -o myapp main.go</code></li> <li>Generate a binary named \"myapp\" <code>./myapp</code> Unlike go run, go build creates a reusable binary that can be shared or executed multiple times without recompilation.</li> </ol>"},{"location":"tutorials/go-tutorial/#launching-it","title":"Launching it","text":"<p>Launch it by opening the VS Code command palette and selecting <code>Remote-Containers: Open folder in container...</code> and choose the current folder.</p> <p>This will build the Docker image, install the VS Code dependencies in there, and bind mount everything for you!</p> <p>Finally, you have a terminal running a beautiful zsh inside VS Code (open a terminal if you don\u2019t see it).</p>"},{"location":"tutorials/go-tutorial/#pushing-to-github","title":"Pushing to GitHub","text":"<p>Now you can commit and push these changes to github. Stage your changes and commit them, with an appropriate message, before pushing to your remote repository. <pre><code>git add .\ngit commit -m \"Created Go project\"\ngit push origin main\n</code></pre> Now, you are done!</p>"},{"location":"tutorials/go-tutorial/#references","title":"References","text":"<p>Citation 1 -&gt; Medium Article Citation 2 -&gt; Kris Jordan's MkDocs Tutorial Citation 3 -&gt; Daniel Henderson's Rust Tutorial</p>"}]}